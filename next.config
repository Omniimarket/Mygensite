// next.config.js

/** @type {import('next').NextConfig} */
const path = require('path');
const fs = require('fs');

const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,

  async redirects() {
    try {
      // ✅ Use absolute path to avoid resolution issues
      const dataPath = path.join(process.cwd(), 'data', 'generatorsData.js');
      console.log('✅ Loading generators data from:', dataPath);

      // Manually import with require
      const generatorModule = require(dataPath);
      const { generatorDetails } = generatorModule;

      if (!generatorDetails || typeof generatorDetails !== 'object') {
        throw new Error('generatorDetails is missing or invalid');
      }

      const redirects = Object.keys(generatorDetails).map((slug) => ({
        source: `/${slug}`,
        destination: `/generators/${slug}`,
        permanent: true,
      }));

      console.log(`✅ Created ${redirects.length} redirects`);
      return redirects;
    } catch (error) {
      console.error('❌ FAILED TO LOAD REDIRECTS:', error.message);
      console.error('👉 Run: node -e "require(\'./data/generatorsData\')" to debug');
      return [];
    }
  },
};

module.exports = nextConfig;